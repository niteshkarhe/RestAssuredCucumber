<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="BDD Test Suite" duration-ms="18062" started-at="2020-06-23T14:51:29Z" finished-at="2020-06-23T14:51:48Z">
    <groups>
      <group name="cucumber scenarios">
        <method signature="TestRunner.feature(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:com.restassured.runner.TestRunner@59fa1d9b]" name="feature" class="com.restassured.runner.TestRunner"/>
      </group> <!-- cucumber scenarios -->
    </groups>
    <test name="API Testing" duration-ms="18062" started-at="2020-06-23T14:51:29Z" finished-at="2020-06-23T14:51:48Z">
      <class name="com.restassured.runner.TestRunner">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:com.restassured.runner.TestRunner@59fa1d9b]" name="setUpClass" is-config="true" duration-ms="273" started-at="2020-06-23T20:21:29Z" finished-at="2020-06-23T20:21:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="feature(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:com.restassured.runner.TestRunner@59fa1d9b]" name="feature" duration-ms="12063" started-at="2020-06-23T20:21:30Z" description="Runs Cucumber Feature" data-provider="scenario" finished-at="2020-06-23T20:21:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify simple get request without body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["This feature file has all Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method status="FAIL" signature="feature(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:com.restassured.runner.TestRunner@59fa1d9b]" name="feature" duration-ms="1593" started-at="2020-06-23T20:21:42Z" description="Runs Cucumber Feature" data-provider="scenario" finished-at="2020-06-23T20:21:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify get request to find brandname with given id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["This feature file has all Get requests"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.JSON path BrandName doesn't match.Expected: a string equal to "HP" ignoring case  Actual: Sony]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.JSON path BrandName doesn't match.Expected: a string equal to "HP" ignoring case  Actual: Sonyat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)at java.lang.reflect.Constructor.newInstance(Unknown Source)at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:237)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.call(PogoMetaMethodSite.java:70)at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:115)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:127)at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:671)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:156)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:261)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:156)at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:192)at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:108)at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)at com.restassured.restservicefunctions.RequestBuilder.assertRespBodyTagValue(RequestBuilder.java:245)at com.restassured.stepdef.servicesteps.CommonSteps.verify_the_brandname_of_requested_id(CommonSteps.java:61)at âœ½.verify the brandname of requested id(src/test/resources/GetRequestFeatures/AllGetMethodScenarios.feature:17)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method status="PASS" signature="feature(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:com.restassured.runner.TestRunner@59fa1d9b]" name="feature" duration-ms="1883" started-at="2020-06-23T20:21:44Z" description="Runs Cucumber Feature" data-provider="scenario" finished-at="2020-06-23T20:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify post request with multiple test data and with body content set in method"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["This feature file has all Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method status="PASS" signature="feature(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:com.restassured.runner.TestRunner@59fa1d9b]" name="feature" duration-ms="515" started-at="2020-06-23T20:21:45Z" description="Runs Cucumber Feature" data-provider="scenario" finished-at="2020-06-23T20:21:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify post request with multiple test data and with body content set in method"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["This feature file has all Get requests"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:com.restassured.runner.TestRunner@59fa1d9b]" name="tearDownClass" is-config="true" duration-ms="1610" started-at="2020-06-23T20:21:46Z" finished-at="2020-06-23T20:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.restassured.runner.TestRunner -->
    </test> <!-- API Testing -->
  </suite> <!-- BDD Test Suite -->
</testng-results>
